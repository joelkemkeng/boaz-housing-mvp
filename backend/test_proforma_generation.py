#!/usr/bin/env python3
"""
Test de g√©n√©ration de proforma - Script de test simple et direct
"""

import sys
import os
sys.path.append('/home/joel/projet-boaz-housing/boaz-housing-mvp/backend')

from app.services.proforma_generator import ProformaGenerator
from app.services.services_data import ServicesDataService
import json

def test_proforma_generation():
    """Test complet de g√©n√©ration de proforma"""
    print("üöÄ Test de g√©n√©ration de proforma...")
    
    try:
        # 1. Initialiser les services
        proforma_generator = ProformaGenerator()
        services_data_service = ServicesDataService()
        
        # 2. R√©cup√©rer les donn√©es de l'organisation
        organisation_data = services_data_service.get_organisation_details()
        print("‚úÖ Donn√©es organisation r√©cup√©r√©es")
        
        # 3. R√©cup√©rer les services disponibles
        services = services_data_service.get_all_services(active_only=True)
        print(f"‚úÖ {len(services)} services trouv√©s")
        
        if not services:
            print("‚ùå Aucun service actif trouv√©!")
            return None
            
        # 4. Donn√©es client test
        client_data = {
            "nom": "MARTIN",
            "prenom": "Jean-Claude", 
            "email": "jean-claude.martin@email.com",
            "date_naissance": "15/03/2000",
            "ville_naissance_client": "Douala",
            "pays_naissance_client": "Cameroun",
            "telephone": "+237 690 000 000"
        }
        
        # 5. Donn√©es logement test
        logement_data = {
            "adresse": "24 Rue du Docteur Charcot, Nanterre",
            "ville": "Nanterre",
            "pays": "France",
            "loyer": 450000,  # en FCFA
            "charges": 50000
        }
        
        # 6. S√©lectionner le premier service actif (Attestation de Logement)
        selected_services = [services[0]]  # Premier service actif
        
        print(f"‚úÖ Service s√©lectionn√©: {selected_services[0]['nom']}")
        print(f"   Prix: {selected_services[0]['tarif']} FCFA")
        
        # 7. G√©n√©rer la proforma
        print("üîÑ G√©n√©ration PDF en cours...")
        pdf_path = proforma_generator.generate_proforma(
            client_data=client_data,
            services_data=selected_services,
            logement_data=logement_data,
            organisation_data={"organisation": organisation_data}
        )
        
        # 8. V√©rifier le r√©sultat
        if os.path.exists(pdf_path):
            file_size = os.path.getsize(pdf_path)
            print(f"‚úÖ PDF g√©n√©r√© avec succ√®s!")
            print(f"üìÑ Path: {pdf_path}")
            print(f"üìä Taille: {file_size:,} bytes")
            
            # Cr√©er un lien symbolique pour faciliter l'acc√®s
            link_path = "/home/joel/test_proforma.pdf"
            if os.path.exists(link_path):
                os.remove(link_path)
            os.symlink(pdf_path, link_path)
            print(f"üîó Lien cr√©√©: {link_path}")
            
            return pdf_path
        else:
            print("‚ùå Fichier PDF non trouv√©!")
            return None
            
    except Exception as e:
        print(f"‚ùå Erreur: {str(e)}")
        import traceback
        traceback.print_exc()
        return None

def main():
    """Fonction principale"""
    print("=" * 60)
    print("TEST G√âN√âRATION PROFORMA - BOAZ HOUSING")
    print("=" * 60)
    
    pdf_path = test_proforma_generation()
    
    print("=" * 60)
    if pdf_path:
        print("üéâ TEST R√âUSSI!")
        print(f"üìÑ PDF disponible: {pdf_path}")
        print("üîó Lien rapide: /home/joel/test_proforma.pdf")
    else:
        print("üí• TEST √âCHOU√â!")
    print("=" * 60)

if __name__ == "__main__":
    main()